{"ast":null,"code":"import _classCallCheck from \"/Users/chrisalberg/Code/Homework/clickgamereact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/chrisalberg/Code/Homework/clickgamereact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/chrisalberg/Code/Homework/clickgamereact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/chrisalberg/Code/Homework/clickgamereact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/chrisalberg/Code/Homework/clickgamereact/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/chrisalberg/Code/Homework/clickgamereact/src/App.js\";\nimport React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport CardWrapper from \"./components/CardWrapper\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\"; // import Title from \"./components/Title\"\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      score: 0,\n      highscore: 0\n    };\n\n    _this.highscore = function () {\n      if (_this.state.score > _this.state.highscore) {\n        _this.setState({\n          highscore: _this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n    };\n\n    _this.gameover = function () {\n      _this.state.friends.forEach(function (friend) {\n        friend.count = 0;\n      });\n\n      alert(\"Game Over :( \\nscore: \".concat(_this.state.score));\n\n      _this.setState({\n        score: 0\n      });\n    };\n\n    _this.clickCount = function (id) {\n      _this.state.friends.find(function (friend) {\n        if (friend.id === id) {\n          if (friend.count === 0) {\n            friend.count = friend.count + 1;\n\n            _this.setState({\n              score: _this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n\n            _this.state.friends.sort(function () {\n              return Math.random() - 0.5;\n            });\n\n            return true;\n          } else {\n            _this.highscore();\n\n            _this.gameover();\n          }\n        }\n\n        return false;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        highscore: this.state.highscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Clicky Game!\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Click an image! Once you click the character, don't click them again!  \")), React.createElement(CardWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.friends.map(function (friend) {\n        return React.createElement(CharacterCard // removeFriend={this.removeFriend}\n        , {\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          count: friend.count,\n          clickCount: _this2.clickCount,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/chrisalberg/Code/Homework/clickgamereact/src/App.js"],"names":["React","Component","CharacterCard","Wrapper","CardWrapper","Navbar","friends","App","state","score","highscore","setState","console","log","gameover","forEach","friend","count","alert","clickCount","id","find","sort","Math","random","map","name","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CACA;;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNF,MAAAA,OAAO,EAAPA,OADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;UAQRA,S,GAAY,YAAM;AAChB,UAAI,MAAKF,KAAL,CAAWC,KAAX,GAAmB,MAAKD,KAAL,CAAWE,SAAlC,EAA4C;AAC1C,cAAKC,QAAL,CAAc;AAACD,UAAAA,SAAS,EAAC,MAAKF,KAAL,CAAWC;AAAtB,SAAd,EAA4C,YAAW;AACrDG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;AACF,K;;UAGDI,Q,GAAW,YAAM;AACf,YAAKN,KAAL,CAAWF,OAAX,CAAmBS,OAAnB,CAA2B,UAASC,MAAT,EAAiB;AAC1CA,QAAAA,MAAM,CAACC,KAAP,GAAe,CAAf;AACD,OAFD;;AAGAC,MAAAA,KAAK,iCAA0B,MAAKV,KAAL,CAAWC,KAArC,EAAL;;AACA,YAAKE,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAE;AAAR,OAAd;AACD,K;;UAEDU,U,GAAa,UAAAC,EAAE,EAAI;AACjB,YAAKZ,KAAL,CAAWF,OAAX,CAAmBe,IAAnB,CAAwB,UAAAL,MAAM,EAAI;AAChC,YAAIA,MAAM,CAACI,EAAP,KAAcA,EAAlB,EAAsB;AACpB,cAAGJ,MAAM,CAACC,KAAP,KAAiB,CAApB,EAAsB;AACpBD,YAAAA,MAAM,CAACC,KAAP,GAAeD,MAAM,CAACC,KAAP,GAAe,CAA9B;;AACA,kBAAKN,QAAL,CAAc;AAACF,cAAAA,KAAK,EAAG,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,aAAd,EAA8C,YAAU;AACtDG,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,KAAvB;AACD,aAFD;;AAGA,kBAAKD,KAAL,CAAWF,OAAX,CAAmBgB,IAAnB,CAAwB;AAAA,qBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,aAAxB;;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,kBAAKd,SAAL;;AACA,kBAAKI,QAAL;AACD;AACF;;AACD,eAAO,KAAP;AACD,OAfD;AAgBD,K;;;;;;;AAED;6BACU;AAAA;;AACR,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAA1B;AAAiC,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAFF,CAFF,EAME,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKF,KAAL,CAAWF,OAAX,CAAmBmB,GAAnB,CAAuB,UAAAT,MAAM;AAAA,eAC5B,oBAAC,aAAD,CACE;AADF;AAEE,UAAA,EAAE,EAAEA,MAAM,CAACI,EAFb;AAGE,UAAA,GAAG,EAAEJ,MAAM,CAACI,EAHd;AAIE,UAAA,IAAI,EAAEJ,MAAM,CAACU,IAJf;AAKE,UAAA,KAAK,EAAEV,MAAM,CAACW,KALhB;AAME,UAAA,KAAK,EAAEX,MAAM,CAACC,KANhB;AAOE,UAAA,UAAU,EAAE,MAAI,CAACE,UAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CAFD,CANF,CADF;AAuBD;;;;EAvEelB,S;;AA0ElB,eAAeM,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport CardWrapper from \"./components/CardWrapper\";\n\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\n// import Title from \"./components/Title\"\nimport './App.css';\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    highscore: 0\n\n  };\n\n  //calculate highscore -- need to test this \n  highscore = () => {\n    if (this.state.score > this.state.highscore){\n      this.setState({highscore:this.state.score}, function() {\n        console.log(this.state.highscore);\n      })\n    }\n  }\n\n  //TODO: if score is x, you win yay!\n  gameover = () => {\n    this.state.friends.forEach(function(friend) {\n      friend.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n  }\n\n  clickCount = id => {\n    this.state.friends.find(friend => {\n      if (friend.id === id) {\n        if(friend.count === 0){\n          friend.count = friend.count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.friends.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.highscore();\n          this.gameover();\n        }\n      }\n      return false;\n    });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render () {\n    return (\n      <Wrapper>\n        <Navbar score={this.state.score} highscore={this.state.highscore}/>\n        <header className=\"header\">\n          <h1>Clicky Game!</h1>\n          <h2>Click an image! Once you click the character, don't click them again!  </h2>\n        </header>\n        <CardWrapper>\n        {/* <Title>Match Click Game</Title> */}\n        {this.state.friends.map(friend => (\n          <CharacterCard\n            // removeFriend={this.removeFriend}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            count={friend.count}\n            clickCount={this.clickCount}\n          />\n        ))}\n        </CardWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}